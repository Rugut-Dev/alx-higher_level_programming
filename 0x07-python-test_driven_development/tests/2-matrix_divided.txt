"""
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Checks for zero division error of div
>>> try:
...     matrix_divided([[6, 7, 3], [9, 8, 12]], 0)
... except ZeroDivisionError as e:
...     str(e)
'division by zero'

# Checks if div is not int nor float
>>> try:
...     matrix_divided([[6, 7], [9, 8]], "3")
... except TypeError as e:
...     str(e)
'div must be a number'

# Checks if len of each row is equal
>>> try:
...     matrix_divided([[6, 7, 3], [9, 8]], 2)
... except TypeError as e:
...     str(e)
'Each row of the matrix must have the same size'

# Checks matrix if its a list of lists of integers or floats
>>> try:
...     matrix_divided([[6, "hello", 3], [9, 8, 12]], 2)
... except TypeError as e:
...     str(e)
'matrix must be a matrix (list of lists) of integers/floats'

# Checks if matrix is matrix
>>> try:
...     matrix_divided([9, 8, 12], 2)
... except TypeError as e:
...     str(e)
'matrix must be a matrix (list of lists) of integers/floats'

#Checks correct execution, rounded off to 2
>>> matrix_divided([[1, 2], [3, 4]], 3)
[[0.33, 0.67], [1.0, 1.33]]

"""
